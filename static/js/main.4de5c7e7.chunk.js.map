{"version":3,"sources":["components/Form.js","components/AddList.js","components/ListContainer.js","components/ClearCatch.js","App.js","index.js"],"names":["Form","inputText","setText","textArr","setArr","setCondition","className","value","type","onInput","e","target","onClick","preventDefault","i","userString","status","id","Math","random","onChange","AddList","listVal","currenti","map","filter","ele","ListContainer","condition","ListContainerHandler","items","ClearCatch","localStorage","setItem","JSON","stringify","App","useState","useEffect","getLocalTodoList","getItem","fetchedTodoList","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4de5c7e7.chunk.js","sourcesContent":["export default function Form({\r\n  inputText,\r\n  setText,\r\n  textArr,\r\n  setArr,\r\n  setCondition,\r\n}) {\r\n  const InputHandler = (e) => {\r\n      setText(e.target.value);\r\n    \r\n  };\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(inputText !== \"\"){\r\n        setArr((i) => [\r\n            ...textArr,\r\n            {\r\n              userString: inputText,\r\n              status: false,\r\n              id: Math.random() * 1000\r\n            }\r\n          ]);\r\n    }\r\n    setText(\"\");\r\n  };\r\n  const OptionHandler = (e) => {\r\n    setCondition(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      <div>\r\n        <input\r\n          className=\"inputTextArea\"\r\n          value={inputText}\r\n          type=\"text\"\r\n          onInput={InputHandler}\r\n        />\r\n        <button className=\"submit-btn\" type=\"submit\" onClick={SubmitHandler}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <select className=\"selectBox\" onChange={OptionHandler}>\r\n        <option value=\"all\">ALL</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"remaining\">Remaining</option>\r\n      </select>\r\n    </form>\r\n  );\r\n}\r\n\r\n// <input type=\"radio\" id=\"finished\" name=\"options\" value=\"finished\" onClick={CheckHandler}/>\r\n// <label htmlFor=\"finished\">Completed</label>\r\n// <input type=\"radio\" id=\"all\" name=\"options\" value=\"all\" onClick={ALLHandler} />\r\n// <label htmlFor=\"all\">ALL</label>\r\n","\r\nexport default function AddList({listVal, textArr, setArr, currenti}) {\r\n    const DoneHandler = () =>{\r\n        setArr(textArr.map(i =>{\r\n            if(currenti.id===i.id){\r\n                return{\r\n                    ...i,\r\n                    status: !currenti.status\r\n                }\r\n            }\r\n            return i;\r\n        }))\r\n    };\r\n    const RemoveHandler = () =>{\r\n       setArr(textArr.filter((ele) => (ele.id !== currenti.id)));\r\n    };\r\n    return (\r\n        <div className={`SingleList ${(currenti.status)? \"paintIt\": \"\"}`}>\r\n          <li className={`${(currenti.status)? \"completed paintIt\": \"\"}`}>{listVal}</li>\r\n            <button className=\"done-btn\" onClick={DoneHandler}>-</button>\r\n            <button className=\"remove-btn\" onClick={RemoveHandler}>x</button> \r\n        </div>\r\n    )\r\n}\r\n","import AddList from \"./AddList\";\r\n\r\nexport default function ListContainer({condition, textArr, setArr}){\r\n   \r\n    const ListContainerHandler = (items) =>{\r\n        return (<AddList \r\n            listVal = {items.userString}\r\n            key = {items.id}\r\n            textArr = {textArr}\r\n            currenti = {items}\r\n            setArr = {setArr}\r\n            condition = {condition}/>)\r\n    }\r\n    return(\r\n        <div className=\"ListBox\">\r\n            <ul className=\"ListContainer\">\r\n                {textArr.map(items => (\r\n                    (condition === \"all\")?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    (condition === \"completed\" && items.status)?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    (condition === \"remaining\" && !items.status)?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    null\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\n\r\nexport default function ClearCatch({setArr}) {\r\n    const clearHandler = () => {\r\n        localStorage.setItem('todoList', JSON.stringify([]));\r\n        setArr([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"clear-btn-set\">\r\n                <button onClick={clearHandler} className=\"clear-btn\" type='button'>Clear Catch</button>\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport Form from \"./components/Form\";\r\nimport ListContainer from \"./components/ListContainer\";\r\nimport ClearCatch from './components/ClearCatch';\r\n\r\nfunction App() {\r\n  const [inputText, setText] = useState(\"\");\r\n  const [textArr, setArr] = useState([]);\r\n  const [condition, setCondition] = useState(\"all\");\r\n\r\n  //Run once\r\n  //First it will check if the site already have the list stored or not\r\n  // And if it contains the list then it will set values otherwise it will\r\n  // create new empty list for it. \r\n\r\n  useEffect(()=>{\r\n    getLocalTodoList()\r\n  },[]);\r\n\r\n   \r\n  const getLocalTodoList= () =>{\r\n    if(localStorage.getItem('todoList')===null){\r\n      localStorage.setItem('todoList', JSON.stringify([]));\r\n    }\r\n    else{\r\n      const fetchedTodoList = JSON.parse(localStorage.getItem('todoList'));\r\n      setArr(fetchedTodoList);\r\n    }\r\n  }\r\n\r\n  //Run and save\r\n  useEffect(()=>{\r\n    localStorage.setItem('todoList', JSON.stringify(textArr))\r\n  },[textArr]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ClearCatch setArr={setArr} /> \r\n\r\n      <header><h1>TODO LIST</h1></header>     \r\n      \r\n      <Form \r\n      inputText={inputText}\r\n      setText={setText}\r\n      textArr={textArr}\r\n      setArr={setArr}\r\n      setCondition={setCondition}/>\r\n\r\n\r\n      <ListContainer \r\n      textArr={textArr}\r\n      condition={condition}\r\n      setArr={setArr}/> \r\n\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}