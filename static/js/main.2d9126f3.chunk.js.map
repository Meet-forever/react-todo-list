{"version":3,"sources":["components/Form.js","components/AddList.js","components/ListContainer.js","components/ClearCatch.js","App.js","index.js"],"names":["Form","inputText","setText","textArr","setArr","setCondition","style","display","justifyContent","alignItems","className","value","type","onInput","e","target","onClick","preventDefault","i","userString","status","id","Math","random","AddBox","fontSize","onChange","AddList","listVal","currenti","readOnly","map","Done","filter","ele","Delete","ListContainer","condition","ListContainerHandler","items","ClearCatch","localStorage","setItem","JSON","stringify","DeleteSweep","App","useState","useEffect","getLocalTodoList","getItem","fetchedTodoList","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,UACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,OACAC,EACC,EADDA,aAuBA,OACE,iCACE,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAgB,SAAUC,WAAY,UAAnE,UACE,uBACEC,UAAU,gBACVC,MAAOV,EACPW,KAAK,OACLC,QA5Ba,SAACC,GAClBZ,EAAQY,EAAEC,OAAOJ,UA6Bf,wBAAQD,UAAU,aAAaE,KAAK,SAASI,QA1B7B,SAACF,GACrBA,EAAEG,iBACe,KAAdhB,GACCG,GAAO,SAACc,GAAD,4BACAf,GADA,CAEH,CACEgB,WAAYlB,EACZmB,QAAQ,EACRC,GAAoB,IAAhBC,KAAKC,eAInBrB,EAAQ,KAcJ,SACC,cAACsB,EAAA,EAAD,CAAQC,SAAS,eAGpB,yBAAQf,UAAU,YAAYgB,SAhBZ,SAACZ,GACrBT,EAAaS,EAAEC,OAAOJ,QAepB,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,6B,4BC5CO,SAASgB,EAAT,GAAwD,IAAtCC,EAAqC,EAArCA,QAASzB,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,OAAQyB,EAAW,EAAXA,SAevD,OACI,sBAAKnB,UAAS,qBAAiBmB,EAAST,OAAS,UAAW,IAA5D,UACE,uBAAO,aAAW,OAAOV,UAAS,oBAAgBmB,EAAST,OAAS,oBAAqB,IAAMU,UAAQ,EAACnB,MAAOiB,IAC7G,gCACA,wBAAQlB,UAAU,WAAWM,QAlBjB,WAChBZ,EAAOD,EAAQ4B,KAAI,SAAAb,GACf,OAAGW,EAASR,KAAKH,EAAEG,GACf,2BACOH,GADP,IAEIE,QAASS,EAAST,SAGnBF,OAUP,SAAmD,cAACc,EAAA,EAAD,MACnD,wBAAQtB,UAAU,aAAaM,QARjB,WACnBZ,EAAOD,EAAQ8B,QAAO,SAACC,GAAD,OAAUA,EAAIb,KAAOQ,EAASR,QAO/C,SAAuD,cAACc,EAAA,EAAD,YCpBpD,SAASC,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,UAAWlC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OAEjDkC,EAAuB,SAACC,GAC1B,OAAQ,cAACZ,EAAD,CACJC,QAAWW,EAAMpB,WAEjBhB,QAAWA,EACX0B,SAAYU,EACZnC,OAAUA,EACViC,UAAaA,GAJNE,EAAMlB,KAMrB,OACI,qBAAKX,UAAU,UAAf,SACI,qBAAKA,UAAU,gBAAf,SACKP,EAAQ4B,KAAI,SAAAQ,GAAK,MACC,QAAdF,GAGc,cAAdA,GAA6BE,EAAMnB,OAFhCkB,EAAqBC,GAKV,cAAdF,GAA8BE,EAAMnB,OAGrC,KAFIkB,EAAqBC,U,YCrB9B,SAASC,EAAT,GAA+B,IAAVpC,EAAS,EAATA,OAMhC,OACI,qBAAKM,UAAU,gBAAf,SACQ,wBAAQM,QAPC,WACjByB,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,KAChDxC,EAAO,KAKgCM,UAAU,YAAYE,KAAK,SAA1D,SAAmE,cAACiC,EAAA,EAAD,QC+CpEC,MArDf,WACE,MAA6BC,mBAAS,IAAtC,mBAAO9C,EAAP,KAAkBC,EAAlB,KACA,EAA0B6C,mBAAS,IAAnC,mBAAO5C,EAAP,KAAgBC,EAAhB,KACA,EAAkC2C,mBAAS,OAA3C,mBAAOV,EAAP,KAAkBhC,EAAlB,KAOA2C,qBAAU,WACRC,MACA,IAGF,IAAMA,EAAkB,WACtB,GAAsC,OAAnCR,aAAaS,QAAQ,YACtBT,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,SAE9C,CACF,IAAMO,EAAkBR,KAAKS,MAAMX,aAAaS,QAAQ,aACxD9C,EAAO+C,KASX,OAJAH,qBAAU,WACRP,aAAaC,QAAQ,WAAYC,KAAKC,UAAUzC,MAChD,CAACA,IAGD,sBAAKO,UAAU,MAAf,UACE,cAAC8B,EAAD,CAAYpC,OAAQA,IAEpB,iCAAQ,6CAER,cAACJ,EAAD,CACAC,UAAWA,EACXC,QAASA,EACTC,QAASA,EACTC,OAAQA,EACRC,aAAcA,IAGd,cAAC+B,EAAD,CACAjC,QAASA,EACTkC,UAAWA,EACXjC,OAAQA,QC/CdiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d9126f3.chunk.js","sourcesContent":["import {AddBox} from '@material-ui/icons'\r\n\r\nexport default function Form({\r\n  inputText,\r\n  setText,\r\n  textArr,\r\n  setArr,\r\n  setCondition,\r\n}) {\r\n  const InputHandler = (e) => {\r\n      setText(e.target.value);\r\n    \r\n  };\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(inputText !== \"\"){\r\n        setArr((i) => [\r\n            ...textArr,\r\n            {\r\n              userString: inputText,\r\n              status: false,\r\n              id: Math.random() * 1000\r\n            }\r\n          ]);\r\n    }\r\n    setText(\"\");\r\n  };\r\n  const OptionHandler = (e) => {\r\n    setCondition(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      <div style={{display:'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n        <input\r\n          className=\"inputTextArea\"\r\n          value={inputText}\r\n          type=\"text\"\r\n          onInput={InputHandler}\r\n        />\r\n        <button className=\"submit-btn\" type=\"submit\" onClick={SubmitHandler}>\r\n         <AddBox fontSize=\"large\" />\r\n        </button>\r\n      </div>\r\n      <select className=\"selectBox\" onChange={OptionHandler}>\r\n        <option value=\"all\">ALL</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"remaining\">Remaining</option>\r\n      </select>\r\n    </form>\r\n  );\r\n}\r\n\r\n// <input type=\"radio\" id=\"finished\" name=\"options\" value=\"finished\" onClick={CheckHandler}/>\r\n// <label htmlFor=\"finished\">Completed</label>\r\n// <input type=\"radio\" id=\"all\" name=\"options\" value=\"all\" onClick={ALLHandler} />\r\n// <label htmlFor=\"all\">ALL</label>\r\n","import { Delete, Done } from '@material-ui/icons';\r\n\r\nexport default function AddList({listVal, textArr, setArr, currenti}) {\r\n    const DoneHandler = () =>{\r\n        setArr(textArr.map(i =>{\r\n            if(currenti.id===i.id){\r\n                return{\r\n                    ...i,\r\n                    status: !currenti.status\r\n                }\r\n            }\r\n            return i;\r\n        }))\r\n    };\r\n    const RemoveHandler = () =>{\r\n       setArr(textArr.filter((ele) => (ele.id !== currenti.id)));\r\n    };\r\n    return (\r\n        <div className={`SingleList ${(currenti.status)? \"paintIt\": \"\"}`}>\r\n          <input aria-label=\"List\" className={`inputList ${(currenti.status)? \"completed paintIt\": \"\"}`} readOnly value={listVal}/>\r\n            <div>\r\n            <button className=\"done-btn\" onClick={DoneHandler}><Done /></button>\r\n            <button className=\"remove-btn\" onClick={RemoveHandler}><Delete /></button> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import AddList from \"./AddList\";\r\n\r\nexport default function ListContainer({condition, textArr, setArr}){\r\n   \r\n    const ListContainerHandler = (items) =>{\r\n        return (<AddList \r\n            listVal = {items.userString}\r\n            key = {items.id}\r\n            textArr = {textArr}\r\n            currenti = {items}\r\n            setArr = {setArr}\r\n            condition = {condition}/>)\r\n    }\r\n    return(\r\n        <div className=\"ListBox\">\r\n            <div className=\"ListContainer\">\r\n                {textArr.map(items => (\r\n                    (condition === \"all\")?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    (condition === \"completed\" && items.status)?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    (condition === \"remaining\" && !items.status)?\r\n                        ListContainerHandler(items)\r\n                    :\r\n                    null\r\n                ))}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {DeleteSweep} from '@material-ui/icons';\r\n\r\nexport default function ClearCatch({setArr}) {\r\n    const clearHandler = () => {\r\n        localStorage.setItem('todoList', JSON.stringify([]));\r\n        setArr([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"clear-btn-set\">\r\n                <button onClick={clearHandler} className=\"clear-btn\" type='button'><DeleteSweep /></button>\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport Form from \"./components/Form\";\r\nimport ListContainer from \"./components/ListContainer\";\r\nimport ClearCatch from './components/ClearCatch';\r\n\r\nfunction App() {\r\n  const [inputText, setText] = useState(\"\");\r\n  const [textArr, setArr] = useState([]);\r\n  const [condition, setCondition] = useState(\"all\");\r\n\r\n  //Run once\r\n  //First it will check if the site already have the list stored or not\r\n  // And if it contains the list then it will set values otherwise it will\r\n  // create new empty list for it. \r\n\r\n  useEffect(()=>{\r\n    getLocalTodoList()\r\n  },[]);\r\n\r\n   \r\n  const getLocalTodoList= () =>{\r\n    if(localStorage.getItem('todoList')===null){\r\n      localStorage.setItem('todoList', JSON.stringify([]));\r\n    }\r\n    else{\r\n      const fetchedTodoList = JSON.parse(localStorage.getItem('todoList'));\r\n      setArr(fetchedTodoList);\r\n    }\r\n  }\r\n\r\n  //Run and save\r\n  useEffect(()=>{\r\n    localStorage.setItem('todoList', JSON.stringify(textArr))\r\n  },[textArr]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ClearCatch setArr={setArr} /> \r\n\r\n      <header><h1>TODO LIST</h1></header>     \r\n      \r\n      <Form \r\n      inputText={inputText}\r\n      setText={setText}\r\n      textArr={textArr}\r\n      setArr={setArr}\r\n      setCondition={setCondition}/>\r\n\r\n\r\n      <ListContainer \r\n      textArr={textArr}\r\n      condition={condition}\r\n      setArr={setArr}/> \r\n\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}